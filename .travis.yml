import: 
- source: Activiti/activiti-scripts:.travis.java.yml@dev-almerico-3212-movepropogation-to-trtavis
  mode: deep_merge_append
env:
  global:
    - ORG='activiti'
    - APP_NAME='activiti-cloud-dependencies'
    - PREVIEW_NAMESPACE="example-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER";
    - GLOBAL_GATEWAY_DOMAIN="35.242.205.159.nip.io"
    - REALM="activiti"
    - GATEWAY_HOST="gateway.$PREVIEW_NAMESPACE.$GLOBAL_GATEWAY_DOMAIN"
    - SSO_HOST="identity.$PREVIEW_NAMESPACE.$GLOBAL_GATEWAY_DOMAIN"
    - GITHUB_CHARTS_REPO="https://github.com/Activiti/activiti-cloud-helm-charts.git"
    - RELEASE_BRANCH="develop"
    - RELEASE_TAG_REGEX="*M*"
    - HELM_VERSION=2.14.3
    - HELM_REPO_BASE_URL=https://kubernetes-charts.alfresco.com
    - HELM_REPO=stable
    - KUBERNETES_VERSION=1.14.8
    
before_script: |
  git config credential.helper store
  echo "machine github.com login jx-activiti-cloud password $GH_TOKEN" >~/.netrc
  ssh -vT git@github.com
  cat ~/.gitconfig
  cat ~/.git-credentials
  make updatebot/push-version-dry
   
  curl https://kubernetes-helm.storage.googleapis.com/helm-v${HELM_VERSION}-linux-amd64.tar.gz | tar zx
  sudo mv linux-amd64/helm /usr/local/bin/
  curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VERSION}/bin/linux/amd64/kubectl &&
  chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  kubectl config set-cluster default-cluster --server=${K8S_API_URL} &&
  kubectl config set-credentials default-admin --token=${K8S_API_TOKEN} &&
  kubectl config set-context default-system --cluster=default-cluster --user=default-admin &&
  kubectl config use-context default-system
  
notifications:
  webhooks:
    urls:
    - https://webhooks.gitter.im/e/4eabeeadee998a77068b
    on_success: change
    on_failure: always
    on_start: never
  slack:
    on_pull_requests: false
    rooms:
      secure: HAijs6KHU8EjUQnq7vNV3q8B6Spzf7BdTt/iQfvs+0fg3dv8wxUcXkf4xjl3VUnX1/SfeUiDE8PKm/AdjMV0vwn0cjz3iO4aLfu5OMS5FhiTON/xt1Vi3bosoakJydF6cMK8cNLS6xG5VxynzMJbKlkxO0aPvk1cHeftc/j0oGIeS0d4lr4aPG6Jx0Dr/zBBkJV/sV73w10gcHQ7ZFV2RNbLaTufRNYH0jimsQzBPIbJjagPhr6WIkUWc2FaedLKOc9xWg7eSOGseG1U6dmxJTf19qRgOlmmIiubJp2M/rqOSY4MzIMQ6mQ9gM+fp1WOW1qsV2oKp3Ns9SnJJxNhrLIS0PXyER3Q3HdmU66aYZ31ZC3pRgjBkcBe4R6rdy6bWTZq1fY1KrexxDtqgzXw9y0dCV0MqzbjbMOYh//sbV3jqqPoSqSuOjWQW+MIG7o2pj1JseHJBl+6ypky/TKYbYnbCCWMnWYyFwXnc0XcyJWRr304NEkqYamhNymcRW/i5SrikNpb0ifq8mg/yiz6n6qwziWysw3H9NTn0YRDDDzQYGpn0x5lQ44jso7qM8kk7KsB9FSyBq4py+T1TLbL/RMyUJsYWGyWM4wJAuONhAfnkiW9OKua7APQAycvwsybXowolYIIEvZ9Lq3px1OsXA4UYEoSxQ+p2STsqyVkhP4=
    on_failure: change
    on_success: never
    template:
    - Repo `%{repository_slug}` *%{result}* build (<%{build_url}|#%{build_number}>)
      for commit (<%{compare_url}|%{commit}>) on branch `%{branch}`.
    - 'Author: %{author} Execution time: *%{duration}*'
    - 'Message: %{message}'
stages:
- name: verify
- name: tag
  if: type != pull_request
- name: deploy
  if: type != pull_request
- name: updatebot
  if: type != pull_request
jobs:
  include:
  - name: Verify build
    stage: verify
    script:
    - echo "PREVIEW_NAMESPACE=${PREVIEW_NAMESPACE}"
    - echo "GH_REF=github.com/${TRAVIS_REPO_SLUG}"
    - mvn versions:set -DnewVersion=$(cat VERSION)
    - mvn clean install
    - make updatebot/push-version-dry
    - make replace-release-full-chart-names
    - make prepare-helm-chart
    - make run-helm-chart
    - make activiti-cloud-acceptance-scenarios
    - make modeling-acceptance-tests
    - make runtime-acceptance-tests
    - make github
    - make tag
    - make delete
    
  - name: Create a tag
    stage: tag
    script: |
      mvn versions:set -DnewVersion=$(cat VERSION)
      git add --all
      git commit -m "Release $(cat VERSION)" --allow-empty
      git tag -fa v$(cat VERSION) -m "Release version $(cat VERSION)"
      git push -f -q https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git v$(cat VERSION)
  - name: Deploy to nexus
    stage: deploy
    script:
    - mvn versions:set -DnewVersion=$(cat VERSION)
    - mvn clean deploy -DskipTests
  - name: Update versions in other components
    stage: updatebot
    script:
    - export VERSION=$(cat VERSION)| make updatebot/push-version

